#############################################################################
# Makefile for building: pvs
# Generated by qmake (2.01a) (Qt 4.7.0) on: Di 22. Mrz 17:59:52 2011
# Project:  pvs.pro
# Template: app
# Command: c:\Qt\2010.05\qt\bin\qmake.exe -o Makefile.win pvs.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -Wall $(DEFINES)
INCPATH       = -I"$(PVBDIR)\pvserver" -I"$(PVBDIR)\rllib\lib" -I"c:\Qt\2010.05\qt\mkspecs\default"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -static-libgcc -Wl,-s
LIBS        =        $(PVBDIR)/win-mingw/bin/libserverlib.a $(MINGWDIR)/lib/libws2_32.a $(PVBDIR)/win-mingw/bin/librllib.a 
QMAKE         = c:\Qt\2010.05\qt\bin\qmake.exe
IDC           = c:\Qt\2010.05\qt\binidc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = . 

####### Files

SOURCES       = main.cpp \
		mask1.cpp 
OBJECTS       = main.o \
		mask1.o
DIST          = 
QMAKE_TARGET  = pvs
DESTDIR        =  #avoid trailing-slash linebreak
TARGET         = pvs.exe
DESTDIR_TARGET = pvs.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.win  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) $(OBJECTS)  $(LIBS)


Makefile.win: pvs.pro  c:/Qt/2010.05/qt/mkspecs/default/qmake.conf c:/Qt/2010.05/qt/mkspecs/qconfig.pri \
		c:/Qt/2010.05/qt/mkspecs/modules/qt_webkit_version.pri \
		c:/Qt/2010.05/qt/mkspecs/features/qt_functions.prf \
		c:/Qt/2010.05/qt/mkspecs/features/qt_config.prf \
		c:/Qt/2010.05/qt/mkspecs/features/exclusive_builds.prf \
		c:/Qt/2010.05/qt/mkspecs/features/default_pre.prf \
		c:/Qt/2010.05/qt/mkspecs/features/win32/default_pre.prf \
		c:/Qt/2010.05/qt/mkspecs/features/release.prf \
		c:/Qt/2010.05/qt/mkspecs/features/default_post.prf \
		c:/Qt/2010.05/qt/mkspecs/features/win32/default_post.prf \
		c:/Qt/2010.05/qt/mkspecs/features/warn_on.prf
	$(QMAKE) -o Makefile.win pvs.pro
c:\Qt\2010.05\qt\mkspecs\qconfig.pri:
c:\Qt\2010.05\qt\mkspecs\modules\qt_webkit_version.pri:
c:\Qt\2010.05\qt\mkspecs\features\qt_functions.prf:
c:\Qt\2010.05\qt\mkspecs\features\qt_config.prf:
c:\Qt\2010.05\qt\mkspecs\features\exclusive_builds.prf:
c:\Qt\2010.05\qt\mkspecs\features\default_pre.prf:
c:\Qt\2010.05\qt\mkspecs\features\win32\default_pre.prf:
c:\Qt\2010.05\qt\mkspecs\features\release.prf:
c:\Qt\2010.05\qt\mkspecs\features\default_post.prf:
c:\Qt\2010.05\qt\mkspecs\features\win32\default_post.prf:
c:\Qt\2010.05\qt\mkspecs\features\warn_on.prf:
qmake:  FORCE
	@$(QMAKE) -o Makefile.win pvs.pro

dist:
	$(ZIP) pvs.zip $(SOURCES) $(DIST) pvs.pro c:\Qt\2010.05\qt\mkspecs\qconfig.pri c:\Qt\2010.05\qt\mkspecs\modules\qt_webkit_version.pri c:\Qt\2010.05\qt\mkspecs\features\qt_functions.prf c:\Qt\2010.05\qt\mkspecs\features\qt_config.prf c:\Qt\2010.05\qt\mkspecs\features\exclusive_builds.prf c:\Qt\2010.05\qt\mkspecs\features\default_pre.prf c:\Qt\2010.05\qt\mkspecs\features\win32\default_pre.prf c:\Qt\2010.05\qt\mkspecs\features\release.prf c:\Qt\2010.05\qt\mkspecs\features\default_post.prf c:\Qt\2010.05\qt\mkspecs\features\win32\default_post.prf c:\Qt\2010.05\qt\mkspecs\features\warn_on.prf  

clean: compiler_clean 
	-$(DEL_FILE) main.o mask1.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.win

check: first

compiler_clean: 



####### Compile

main.o: main.cpp pvapp.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mask1.o: mask1.cpp pvapp.h \
		mask1_slots.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mask1.o mask1.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

