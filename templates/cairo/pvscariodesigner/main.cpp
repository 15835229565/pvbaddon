//***************************************************************************
//                          main.cpp  -  description
//                             -------------------
//  begin            : Mi. Okt. 25 12:37:48 2017
//  generated by     : pvdevelop (C) Lehrig Software Engineering
//  email            : lehrig@t-online.de
//***************************************************************************
#include "pvapp.h"
// todo: comment me out. you can insert these objects as extern in your masks.
// Change "modbus"(Change if applicable) and "modbusdaemon_" with the "name" of your file "name.mkmodbus".
//rlModbusClient     modbus(modbusdaemon_MAILBOX,modbusdaemon_SHARED_MEMORY,modbusdaemon_SHARED_MEMORY_SIZE);
//rlSiemensTCPClient siemensTCP(siemensdaemon_MAILBOX,siemensdaemon_SHARED_MEMORY,siemensdaemon_SHARED_MEMORY_SIZE);
//rlPPIClient        ppi(ppidaemon_MAILBOX,ppidaemon_SHARED_MEMORY,ppidaemon_SHARED_MEMORY_SIZE);

int surface = pvCairo::SVG_QDraw; 

const int process_image_size = 256;
double process_image[process_image_size];

rlThread tloop;
void *loop(void *arg)
{
  char line[256];
  FILE *fin;
  while(1)
  {
    fin = fopen("/proc/uptime","r");
    if(fin != NULL)
    {
      fgets(line,sizeof(line)-1,fin);
      sscanf(line,"%lf %lf", &process_image[0], &process_image[1]);
      printf("cpu_up1=%lf cpu_up2=%lf\n", process_image[0], process_image[1]);
      fclose(fin);
    }
    rlsleep(1000);
  }
  return arg;
}

int pvMain(PARAM *p)
{
int ret;

  pvSendVersion(p);
  pvSetCaption(p,"pvs");
  pvResize(p,0,1280*2,1024*2);
  //pvScreenHint(p,1024,768); // this may be used to automatically set the zoomfactor
  ret = 1;
  pvGetInitialMask(p);
  printf("p->url=%s p->initial_mask->%s\n",p->url,p->initial_mask);
  if     (strstr(p->url,"/mask1") != NULL) ret = 1;
  else if(strstr(p->url,"/mask2") != NULL) ret = 2;
  surface = pvCairo::SVG_QDraw;
  if(strstr(p->url,"/png") != NULL) surface = pvCairo::PNG_QDraw;

  while(1)
  {
    if(trace) printf("show_mask%d\n", ret);
    switch(ret)
    {
      case 2:
        pvStatusMessage(p,-1,-1,-1,"mask2");
        ret = show_mask2(p);
        break;
      case 1:
        pvStatusMessage(p,-1,-1,-1,"mask1");
        ret = show_mask1(p);
        break;
      default:
        return 0;
    }
  }
}

#ifdef USE_INETD
int main(int ac, char **av)
{
PARAM p;

  pvInit(ac,av,&p);
  /* here you may interpret ac,av and set p->user to your data */
  pvMain(&p);
  return 0;
}
#else  // multi threaded server
int main(int ac, char **av)
{
PARAM p;
int   s;

  pvInit(ac,av,&p);
  tloop.create(loop,NULL);
  rlsleep(1000);
  /* here you may interpret ac,av and set p->user to your data */
  while(1)
  {
    s = pvAccept(&p);
    if(s != -1) pvCreateThread(&p,s);
  }
  return 0;
}
#endif
