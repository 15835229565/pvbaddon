//***************************************************************************
//                          stm1.cpp  -  description
//                             -------------------
//  begin            : Sa. Mai 4 09:29:07 2013
//  generated by     : pvdevelop (C) Lehrig Software Engineering
//  email            : lehrig@t-online.de
//***************************************************************************
#include "plcapp.h"
extern rlState sm2;

//TODO: define our states
static void stStart(rlState *sm);

//TODO: implement our states
static void stStart(rlState *sm)
{
  shm_data->plc.out.out2 = sm->stepCounter;
  if(shm_data->plc.state.stm2_running == 0)
  {
    if(shm_data->pvs.state.button_start_stm2 == 1)
    {
      startStepsStm2(&sm2, 100);               // start statemachine 2 thread
    }
    else if(shm_data->plc.in.in1 & BIT1)
    {
      startStepsStm2(&sm2, 100);               // start statemachine 2 thread
    }
  }  
}

int startStepsStm1(rlState *sm, int cycletime) // start our statemachine
{
  if(trace) printf("Start stm1\n");
  shm_data->plc.state.stm1_running = 1;        // set running within shared memory
  sm->gotoState(stStart);                      // goto nextState
  sm->startSteps(cycletime);                   // start a thread that will handle our statemachine
  return 0;
}

